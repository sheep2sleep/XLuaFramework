local base_msg = Class()

--消息注册（添加请求和响应）
function base_msg:add_req_res(msg_name,msg_id,...)
    local keys = {...}
    --消息请求（打包key-value为table，随id一起调用send_msg发送）
    self["req_"..msg_name] = function(self,...)
        local values = {...}
        if #keys ~= #values then
            Log.Error("参数不正确：", msg_name)
        end
        local send_data = {}
        for i = 1, #keys do
            send_data[keys[i]] = values[i]
        end
        msg_mgr.send_msg(msg_id,send_data)
    end
    
    --消息接收（如果定义了接收方法就调用register方法）
    if type(self["res_"..msg_name]) == "function" then
        msg_mgr.register(msg_id,--传入id
            function (data)--传入接收消息后的回调方法
                    local msg = Json.decode(data)--用decode解析Json
                    if msg.code ~= 0 then
                        Log.Error("错误码：", msg.code)
                        return
                    end
                self["res_"..msg_name](self,msg)--放入接收方法中 
            end)
    else
        Log.Error("请注册消息返回回调："..msg_name)
    end   
end

return base_msg